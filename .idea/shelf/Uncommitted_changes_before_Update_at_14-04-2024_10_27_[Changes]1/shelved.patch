Index: src/main/java/me/porey/pvptoggler/command/PvPCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package me.porey.pvptoggler.command;\r\n\r\nimport me.porey.pvptoggler.PvPTogglerPlugin;\r\nimport me.porey.pvptoggler.pvp.PvPManager;\r\nimport me.porey.pvptoggler.util.CachedMessages;\r\nimport org.bukkit.command.Command;\r\nimport org.bukkit.command.CommandExecutor;\r\nimport org.bukkit.command.CommandSender;\r\nimport org.bukkit.entity.Player;\r\n\r\nimport javax.annotation.Nonnull;\r\nimport java.util.UUID;\r\n\r\npublic class PvPCommand implements CommandExecutor {\r\n\r\n    private final CachedMessages cachedMessages;\r\n    private final PvPManager pvpManager;\r\n\r\n    public PvPCommand(PvPTogglerPlugin plugin) {\r\n        this.cachedMessages = plugin.getCachedMessages();\r\n        this.pvpManager = plugin.getPvPManager();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCommand(@Nonnull CommandSender sender, @Nonnull Command command, @Nonnull String label, @Nonnull String[] args) {\r\n        if (!(sender instanceof Player)) {\r\n            sender.sendMessage(cachedMessages.fromConfig(\"general-messages.only-players\"));\r\n            return true;\r\n        }\r\n        Player p = (Player) sender;\r\n        if (args.length == 0) {\r\n            togglePvP(p, p, true);\r\n            return true;\r\n        }\r\n        if(args[0].equalsIgnoreCase(\"-info\")) {\r\n            sendInfoMenu(p);\r\n            return true;\r\n        }\r\n        if (!p.hasPermission(\"pvptoggler.toggle.others\")) {\r\n            togglePvP(p, p, true);\r\n            return true;\r\n        }\r\n        Player target = p.getServer().getPlayerExact(args[0]);\r\n        if(target == null) {\r\n            p.sendMessage(cachedMessages.fromConfig(\"general-messages.player-not-found\"));\r\n            return false;\r\n        }\r\n        togglePvP(p, target, false);\r\n        return true;\r\n    }\r\n\r\n    private void sendInfoMenu(Player p) {\r\n        p.sendMessage(cachedMessages.colorize(\"&aPvPToggler plugin made by&e Porey&a!\"));\r\n        p.sendMessage(cachedMessages.colorize(\"&aMinecraft user:&e Poreyy\"));\r\n        p.sendMessage(cachedMessages.colorize(\"&aDiscord user:&e porey\"));\r\n    }\r\n\r\n    private void togglePvP(CommandSender sender, Player target, boolean self) {\r\n        UUID targetUUID = target.getUniqueId();\r\n\r\n        boolean isFighter = !pvpManager.isFighter(targetUUID);\r\n        pvpManager.setFighter(target, isFighter);\r\n\r\n        if(self)\r\n            sender.sendMessage(cachedMessages.fromConfig(isFighter ? \"pvp-enabled\" : \"pvp-disabled\"));\r\n        else\r\n            sender.sendMessage(cachedMessages.fromConfig(isFighter ? \"pvp-enabled-other\" : \"pvp-disabled-other\").replace(\"{target}\", target.getName()));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/me/porey/pvptoggler/command/PvPCommand.java b/src/main/java/me/porey/pvptoggler/command/PvPCommand.java
--- a/src/main/java/me/porey/pvptoggler/command/PvPCommand.java	
+++ b/src/main/java/me/porey/pvptoggler/command/PvPCommand.java	
@@ -59,6 +59,7 @@
         UUID targetUUID = target.getUniqueId();
 
         boolean isFighter = !pvpManager.isFighter(targetUUID);
+
         pvpManager.setFighter(target, isFighter);
 
         if(self)
Index: src/main/java/me/porey/pvptoggler/PvPTogglerPlugin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package me.porey.pvptoggler;\r\n\r\nimport com.jeff_media.updatechecker.UpdateCheckSource;\r\nimport com.jeff_media.updatechecker.UpdateChecker;\r\nimport me.porey.pvptoggler.extrafeatures.DeathListener;\r\nimport me.porey.pvptoggler.extrafeatures.JoinListener;\r\nimport me.porey.pvptoggler.pvp.PvPManager;\r\nimport me.porey.pvptoggler.rollback.RollbackManager;\r\nimport me.porey.pvptoggler.command.PvPCommand;\r\nimport me.porey.pvptoggler.command.PvPTogglerCommand;\r\nimport me.porey.pvptoggler.extrafeatures.HealthListener;\r\nimport me.porey.pvptoggler.util.CachedMessages;\r\nimport me.porey.pvptoggler.util.PvPTogglerPlaceholderExpansion;\r\nimport org.bukkit.event.HandlerList;\r\nimport org.bukkit.plugin.PluginManager;\r\nimport org.bukkit.plugin.java.JavaPlugin;\r\n\r\npublic final class PvPTogglerPlugin extends JavaPlugin {\r\n\r\n    private final static String SPIGOT_RESOURCE_ID = \"116141\";\r\n\r\n    private CachedMessages cachedMessages;\r\n    private PvPManager pvpManager;\r\n    private RollbackManager rollbackManager;\r\n    private DeathListener deathListener;\r\n    private JoinListener joinListener;\r\n    private HealthListener healthListener;\r\n\r\n    @Override\r\n    public void onEnable() {\r\n        new UpdateChecker(this, UpdateCheckSource.SPIGOT, SPIGOT_RESOURCE_ID).checkEveryXHours(24).checkNow();\r\n        initConfig();\r\n        registerManagers();\r\n        loadHooks();\r\n        initializeListeners();\r\n        registerCommands();\r\n    }\r\n\r\n    @Override\r\n    public void onDisable() {\r\n        this.pvpManager.onDisable();\r\n    }\r\n\r\n    private void initConfig() {\r\n        getConfig().options().copyDefaults(true);\r\n        saveDefaultConfig();\r\n    }\r\n\r\n    private void registerManagers() {\r\n        this.cachedMessages = new CachedMessages(this);\r\n\r\n        this.pvpManager = new PvPManager(this);\r\n        this.pvpManager.register();\r\n\r\n        this.rollbackManager = new RollbackManager(this);\r\n    }\r\n\r\n    private void loadHooks() {\r\n        if (!getServer().getPluginManager().isPluginEnabled(\"PlaceholderAPI\"))\r\n            return;\r\n\r\n        new PvPTogglerPlaceholderExpansion(pvpManager).register();\r\n    }\r\n\r\n    private void initializeListeners() {\r\n        this.deathListener = new DeathListener(this);\r\n        this.joinListener = new JoinListener(pvpManager);\r\n        this.healthListener = new HealthListener(pvpManager);\r\n\r\n        registerOptionalListeners();\r\n    }\r\n\r\n    public void registerOptionalListeners() {\r\n        PluginManager pluginManager = getServer().getPluginManager();\r\n\r\n        if(getConfig().getBoolean(\"format-death-message\"))\r\n            pluginManager.registerEvents(deathListener, this);\r\n        else\r\n            HandlerList.unregisterAll(deathListener);\r\n\r\n        if(getConfig().getBoolean(\"pvp-enabled-by-default\", false))\r\n            pluginManager.registerEvents(joinListener, this);\r\n        else\r\n            HandlerList.unregisterAll(joinListener);\r\n\r\n        if (getConfig().getBoolean(\"stay-at-max-health\", true))\r\n            pluginManager.registerEvents(healthListener, this);\r\n        else\r\n            HandlerList.unregisterAll(healthListener);\r\n    }\r\n\r\n    private void registerCommands() {\r\n        getCommand(\"pvp\").setExecutor(new PvPCommand(this));\r\n        getCommand(\"pvptoggler\").setExecutor(new PvPTogglerCommand(this));\r\n    }\r\n\r\n    public CachedMessages getCachedMessages() {\r\n        return this.cachedMessages;\r\n    }\r\n\r\n    public PvPManager getPvPManager() {\r\n        return pvpManager;\r\n    }\r\n\r\n    public RollbackManager getRollbackManager() {\r\n        return rollbackManager;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/me/porey/pvptoggler/PvPTogglerPlugin.java b/src/main/java/me/porey/pvptoggler/PvPTogglerPlugin.java
--- a/src/main/java/me/porey/pvptoggler/PvPTogglerPlugin.java	
+++ b/src/main/java/me/porey/pvptoggler/PvPTogglerPlugin.java	
@@ -15,6 +15,8 @@
 import org.bukkit.plugin.PluginManager;
 import org.bukkit.plugin.java.JavaPlugin;
 
+import java.util.Objects;
+
 public final class PvPTogglerPlugin extends JavaPlugin {
 
     private final static String SPIGOT_RESOURCE_ID = "116141";
@@ -90,8 +92,8 @@
     }
 
     private void registerCommands() {
-        getCommand("pvp").setExecutor(new PvPCommand(this));
-        getCommand("pvptoggler").setExecutor(new PvPTogglerCommand(this));
+        Objects.requireNonNull(getCommand("pvp")).setExecutor(new PvPCommand(this));
+        Objects.requireNonNull(getCommand("pvptoggler")).setExecutor(new PvPTogglerCommand(this));
     }
 
     public CachedMessages getCachedMessages() {
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>me.porey</groupId>\r\n    <artifactId>PvPToggler</artifactId>\r\n    <version>0.0.2</version>\r\n    <packaging>jar</packaging>\r\n\r\n    <name>PvPToggler</name>\r\n\r\n    <description>A plugin that allows players to toggle pvp on and off.</description>\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n    </properties>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.13.0</version>\r\n                <configuration>\r\n                    <source>${java.version}</source>\r\n                    <target>${java.version}</target>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-shade-plugin</artifactId>\r\n                <version>3.5.2</version>\r\n                <executions>\r\n                    <execution>\r\n                        <phase>package</phase>\r\n                        <goals>\r\n                            <goal>shade</goal>\r\n                        </goals>\r\n                    </execution>\r\n                </executions>\r\n                <configuration>\r\n                    <relocations>\r\n                        <relocation>\r\n                            <pattern>com.jeff_media.updatechecker</pattern>\r\n                            <shadedPattern>me.porey.updatechecker</shadedPattern>\r\n                        </relocation>\r\n                    </relocations>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-resources-plugin</artifactId>\r\n                <version>3.3.1</version>\r\n            </plugin>\r\n        </plugins>\r\n        <resources>\r\n            <resource>\r\n                <directory>src/main/resources</directory>\r\n                <filtering>true</filtering>\r\n            </resource>\r\n        </resources>\r\n    </build>\r\n\r\n    <repositories>\r\n        <repository>\r\n            <id>spigotmc-repo</id>\r\n            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>\r\n        </repository>\r\n        <repository>\r\n            <id>sonatype</id>\r\n            <url>https://oss.sonatype.org/content/groups/public/</url>\r\n        </repository>\r\n        <repository>\r\n            <id>placeholderapi</id>\r\n            <url>https://repo.extendedclip.com/content/repositories/placeholderapi/</url>\r\n        </repository>\r\n        <repository>\r\n            <id>jeff-media-public</id>\r\n            <url>https://repo.jeff-media.com/public/</url>\r\n        </repository>\r\n    </repositories>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.spigotmc</groupId>\r\n            <artifactId>spigot-api</artifactId>\r\n            <version>1.20.4-R0.1-SNAPSHOT</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>me.clip</groupId>\r\n            <artifactId>placeholderapi</artifactId>\r\n            <version>2.11.5</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.jeff_media</groupId>\r\n            <artifactId>SpigotUpdateChecker</artifactId>\r\n            <version>3.0.3</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	
+++ b/pom.xml	
@@ -54,6 +54,14 @@
                 <artifactId>maven-resources-plugin</artifactId>
                 <version>3.3.1</version>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-jar-plugin</artifactId>
+                <version>3.3.0</version>
+                <configuration>
+                    <outputDirectory>C:\Users\samer\Development Tools\Test Servers\Paper 1.20.4\plugins</outputDirectory>
+                </configuration>
+            </plugin>
         </plugins>
         <resources>
             <resource>
